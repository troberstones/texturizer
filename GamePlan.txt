Super Tiler
Goals:
Load a source image and then populate it with a user defined tiles

UI elements:
        Processed image display
        Stack of tile layers
                Tile Layer manipulators
        Controls for current selection
                Source Image
                Target Output
                Tile input
                Tile rotation
                tile scale
                tile opacity
                Each operation can take an input wich can be:
                        The Source
                        The current active state (i.e. all processes up to the current latyer)
                        Another image
                        Randomness controls
                        constant value
                        Random walker
        Inspection controls:
                Need to inspect the image to be tiled
                the output of the operations
                Functions:
                        Zoom
                        Pan
        Each tile needs basic controls:
                Count
                Size
                base orientation
                image
                procedural function
                mask
                        alpha channel
                        image
                        function

Nov 30:
Tasks to complete:
1: Specify tile image
    Hard code an image to be rendered by the tile
2: Add color picker option for table
    Make a color picker delegate for the table
3: Add image picker for table
    Make an image delegate for the table or something

Load background image
specify tile color variation
Fix double render button problem
Add slider for table

Design:
Mechansim where you can drive the parameters of the table
with a connection to another node i.e. Use an image to drive scale
to do this I'll need a second field for each parameter representing a node connection

I don't currently have nodes, so I need to design a base class and a map to hold them
nodes will be referenced by their name, so connections will just be node names

Need a way to have a list of the current nodes
Connection return values:
float color image?
each node will implement a NodeInterface

class NodeInterface:
  // returns a color or float based on the
  // coordinates requested
  getFloat(float x,y);
  getColor(float x,y);

  // Not sure about this one
  getImage()

Problem with nodes is that they need to be edited. Thus the need to have an interface for the
tile editor thing
